//------------------------------------------------------------------------------------
// [ Qustion ]
//------------------------------------------------------------------------------------

//------------------------------------------------------------------------------------
// 1. 코드가 실행되는 순서
//------------------------------------------------------------------------------------


/*(1)*/ i = 1;
while ( /*(2)*/ i <= 10)
{
	/*(3)*/ nSum += i;
	/*(4)*/ i++;
}
/*(5)*/ printf("합계 : %d", nSum);



for ( /*(1)*/ i = 1; /*(2)*/ i <= 10; /*(4)*/ i++)
{
	/*(3)*/ nSum += i;
}
/*(5)*/ printf("합계 : %d", nSum);



//------------------------------------------------------------------------------------
// 2. 잘못된 부분을 찾아서 고쳐보세요.
//------------------------------------------------------------------------------------

int i = 1, nSum = 0;
for (i = 10; i <= 10; i++);
nSum += i;
//for (i = 1; i <= 10; i++);

for (1)
for (;;)

int i = 1, nSum = 0;
while (i <= 10)
nSum += i;
printf("%d까지의 합계 : %d\n", i, nSum);
// printf("%d까지의 합계 : %d\n", 10, nSum);

for (; ; )
printf("Hello\n");
// for (int i=0;i<1 ;i++ )

while (3.14)
printf("3.14는 파이");


int x = 1;
while (3 * x * x + 5 * x + 8)
scanf("%d", x);
printf("X : %d", x);
// while (x>0)
// X= 3 * x * x + 5 * x + 8 

for (printf("hello"); printf("world"); printf("richie")) 
//for ( ;  ;  ) 

int i, N;
scanf("%d", &N);
for (i = 1 : i <= N : i++)
printf("%d, ", N);
// printf("%d, ", i);


int i, nSum = 0;
for (i = 1; i >= nSum; i++)
nSum += i;
// for (i = 1; i >= nSum; nSum += i)

int i; 
for (i = 1; i <= 5; i++)
printf("%d * %d = %d\n", i, i, i*i);
// for (i = 1; i <= 5; i++)


//------------------------------------------------------------------------------------
// 3. 숨어있는 공통적인 규칙들과 반복문을 구성하는 필수 요소들을 찾아보세요.
//------------------------------------------------------------------------------------

1 부터 10 까지의 정수 합계
//규칙1 : 계산에  참여하는 숫자간의 거리가 1
//규칙2 :  합계에 누적 

// 초기값 : 1
// 증감치 : 1
// 반복조건 : 10보다 작거나 같을 때까지
// 반복코드 : 합계에 누적 

1 부터 100 까지의 홀수 합계
//규칙1 : 계산에  참여하는 숫자간의 거리가 2
//규칙2 :  합계에 누적 

// 초기값 : 1
// 증감치 : 2
// 반복조건 : 100보다 작거나 같을 때까지
// 반복코드 : 합계에 누적 


1 부터 N까지의 짝수 합계(N > 1)
//규칙1 : 계산에  참여하는 숫자간의 거리가 2
//규칙2 :  합계에 누적 

// 초기값 : 2
// 증감치 : 2
// 반복조건 : 100보다 작거나 같을 때까지
// 반복코드 : 합계에 누적 

정수 N과 M  사이에 있는 5의 배수 출력(N > 0, M > 0, N < M)
	//규칙1 : 계산에  참여하는 숫자간의 거리가 5
	//규칙2 :  

	// 초기값 : N/5
	// 증감치 : 5
	// 반복조건 : 100보다 작거나 같을 때까지
	// 반복코드 : 배수

	알파벳 대문자 출력
	//규칙1 : 계산에  참여하는 숫자간의 거리가 1
	//규칙2 :  +31

	// 초기값 : 65
	// 증감치 : 1
	// 반복조건 : 97보다 작거나 같을 때까지
	// 반복코드 : 출력

	1부터 N 까지의 짝수 개수(N > 1)
	//규칙1 : 계산에  참여하는 숫자간의 거리가 1
	//규칙2 :  +31

	// 초기값 : 65
	// 증감치 : 1
	// 반복조건 : 97보다 작거나 같을 때까지
	// 반복코드 : 출력

	- 1을 입력할 때까지 합계 계산
	//규칙1 : 계산에  참여하는 숫자간의 거리가 1
	//규칙2 :  +31

	// 초기값 : 65
	// 증감치 : 1
	// 반복조건 : 97보다 작거나 같을 때까지
	// 반복코드 : 출력


	//------------------------------------------------------------------------------------
	// 4. 코드가 어떤 작업을 하는지 확인해보세요 
	//------------------------------------------------------------------------------------

	int i, nSum = 0;
for (i = 1; i <= 100; i += 2)
nSum += i;
// 1부터 100까지  홀수의 합

char ch;
for (ch = 'z'; ch >= 'a'; ch--)
printf("%c", ch);
// 소문자z부터 a까지 거꾸로 출력.

int i = 1;
while (i != 0)
{
	printf("%d\n", i);
	i++;
}
// 무한루프

int i, N;
scanf("%d", &N);
for (i = 2; i< N; i++)
{
	if (N % i == 0)
		break;
}
// 가장 작은 약수를 찾아냄.


int ch = '\0';
while (ch <= 255)
{
	printf("%c", ch);
	ch++;

	if (ch % 16 == 16 - 1)
		printf("\n");
}
// 문자열 입력


char ch;
do
{
	scanf("%c", &ch);
	if (ch == 0)
		break;
	if (ch >= 'a' && ch <= 'z')
		ch -= 'a' - 'A';
	printf("%c\n", ch);
} while (1);
// 대문자를 출력. 0  종료.

int N = 1, nSum = 0;
while (N)
{
	scanf("%d", &N);
	nSum += N;
}
printf("%d", nSUm);
// 0이 입력되면 합계가 출력-> 종료

int i, j;
for (i = 1; i < 10; i++)
{
	for (j = 1; j < 10; j++)
	{
		printf("%4d", i*j);
	}
	printf("\n");
}
// 1단부터 9단 한줄 출력.
int N, nFac = 1;
scanf("%d", &N);
while (N)
{
	nFac *= N;
	N--;
}
printf("%d", nFac);

// N부터 1까지의 곱


int N, nSum = 0;
scanf("%d", &N);
while (N)
{
	nSum += N % 10;
	N /= 10;
}
printf("%d", nSum);
// N이 0이 되면 반복을 멈추고, nSum을 출력하고 종료.

//------------------------------------------------------------------------------------
// 5. 다음의 문장을 whlie 문으로 출력하세요 
//------------------------------------------------------------------------------------

// 1) 구구단을 출력하세요, 출력할 단은 키보드로부터 입력 받습니다.
//	  출력) 단(2-9) : 7
//			7 X 1 = 7 
//          ...
int i = 2;
int dan; 
scanf("%d", &dan);
while (i < 10)
{
	printf("%d X %d = %d", dan, i, dan*i);
	i++;
}


// 2) 아스키 코드표를 출력하세요 단 한줄에 16개씩 수평으로 출력하고,
//    공백문자(32번) 부터 127번까지 출력합니다. 
int i = 0, j = 0, num = 32;
while (i<6) {
	while (j < 16) {
		printf("%4d: %c  ", num, num);
		j++;
		num++;
	}
	puts("");
	j = 0;
	i++;
}



// 3) 0 부터 99 까지의 정수를 출력하세요 단 한줄에 10개씩 수직으로 출력합니다.
//    출력) 0  10  20  30 ... 90
//          1  11  21  31 .... 91
//          ...
int i = 0, j = 0;
while (i < 10) 
{
	while (j <= i + 90) 
	{
		printf("%3d", j);
		j += 10;
	}
	i++;
	j == i;
	puts("");
}

// 4) 제곱표를 출력하세요.행은 밑수가 되고, 열은 지수가 됩니다. 
//   [출력)    1    2   3      4      5
//			2  2    4   8     16      32
//          3  3    9   27    81     243
//          4  4   16   64   256    1024
//          5  5   25  125   625    3125

void main() 
{
	int x = 0, y = 0, num = 1; 
	for (x = 0; x <= 5; x++)
		(x == 0) ? printf("%6c", 32) : printf("%6d", i);
	puts(""); 
	x = 2;
	for (x = 2; x <= 5; x++) {
		printf("%6d", x);
		for (y = 0; y < 5; y++) {
			num *= x;
			printf("%6d", num);
		}
		puts("");
		y = 0;
		num = 1;
	} 
}